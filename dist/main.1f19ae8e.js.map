{"version":3,"sources":["vdom/createElement.js","vdom/render.js","vdom/mount.js","vdom/diff.js","main.js"],"names":["_default","tagName","_ref","arguments","length","undefined","_ref$attrs","attrs","_ref$children","children","vElem","Object","create","assign","renderElem","$el","document","createElement","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","k","v","setAttribute","_iterator","_createForOfIteratorHelper","_step","s","n","done","child","value","appendChild","render","err","e","f","vNode","createTextNode","exports","default","$node","$target","replaceWith","_render","_interopRequireDefault","require","__esModule","r","t","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","_n","F","TypeError","o","a","u","call","next","return","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_arrayLikeToArray","toString","slice","constructor","name","from","test","l","i","push","zip","xs","ys","zipped","Math","min","diffAttrs","oldAttrs","newAttrs","patches","_loop","_loop2","removeAttribute","_i2","_patches","patch","diffChildren","oldVChildren","newVChildren","childPatches","forEach","oldVChild","diff","additionalPatches","_loop3","additionalVChild","$parent","_iterator2","childNodes","_step2","_step2$value","$child","_i3","_additionalPatches","oldVTree","newVTree","remove","$newNode","patchAttrs","patchChildren","_createElement","_mount","_diff","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","createVApp","count","id","class","String","concat","src","vApp","$app","$rootEl","mount","getElementById","handleImageClick","vNewApp","addEventListener"],"mappings":"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,CAAA,uBAAAI,KAAA,CAAAoB,IAAA,CAAAxB,CAAA;AAAA,ADHD,IHASzC,KIGRkH,ADHDnE,GHAiB,GAAAhD,aIGhB0C,AJHgB,CIGhB,QAAAI,ADHDJ,CAAA,EAAAW,CAAA,CCGC,AJHmB,CIGnBN,CJHqB,GAAA/C,EGAtB0C,CCGC,ADHD,CCGCA,CAAA,QJHqB,EIGrBmB,eDHDnB,CAAA,CCGC,CAAAA,CAAA,MDHDmB,iBAAA,CAAAnB,CAAA,EAAAW,CAAA,OAAAV,CAAA,MAAAmB,QAAA,CAAAP,IAAA,CAAAb,CAAA,EAAAqB,KAAA,6BAAApB,CAAA,IAAAD,CAAA,CAAAsB,WAAA,KAAArB,CAAA,GAAAD,CAAA,CAAAsB,WAAA,CAAAC,IAAA,aAAAtB,CAAA,cAAAA,CAAA,GAAAG,KAAA,CAAAoB,IAAA,CAAAxB,CAAA,oBAAAC,CAAA,+CAAAwB,IAAA,CAAAxB,CAAA,IAAAkB,iBAAA,CAAAnB,CAAA,EAAAW,CAAA;ACGC,ADHD,EHC5B,IAAMnD,GIEuB2D,ADHDA,EHCjB,GAAG1D,MAAM,CAACC,MIEQsC,AJFF,AGDCA,CCGC,AJFD,AGDA,ECGCW,ADHDA,CCGC,ADHD,CHCI,CAAC,WIEJA,ADHDA,CCGC,ADHD,ICGCA,ADHDA,CCGC,ADHD,GCGCX,ADHDA,CCGC,ADHD,CCGC9C,ADHDA,MCGC,ADHD,MCGCyD,ADHDA,CCGC,ADHD,GCGCX,ADHDA,CCGC,ADHD,CCGC9C,ADHDA,MCGC,ADHD,YCGCiC,ADHDA,CCGC,ADHD,MCGCP,ADHDA,CCGC,ADHD,GCGCwB,ADHDA,KCGC,ADHD,CCGCO,ADHDA,CCGC,ADHD,GCGCxB,ADHDA,CCGC,ADHD,GCGCwB,ADHDA,CCGC,ADHD,ECGCxB,ADHDA,CCGC,ADHD,ICGCP,ADHDA,CCGC,ADHD,CCGCO,ADHDA,CCGC,ADHD,ICGCa,ADHDA,CCGC,ADHD,CCGCb,ADHDA,CCGC,ADHD,UCGCP,ADHDA,CCGC,ADHD;ACK9B,ADL8B,AFA9B,EDGEnB,EIEImH,AHLAhH,IDGE,CAACD,AGHqBsD,KCKd,AHLA,CDGD,CAACzD,CIEG,AHLA,IDGE,EAAE,GIEjBo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ACM9B,EHTI,EGSAoF,EDLQpF,GCKH,EDLQ,CCKL,ADLMlB,CCKL,WDLiB,CAACF,CAAC,EAAEC,CAAC,CAAC;ACMpC,EHVI,EGUA6G,EDLQ,AFLR3G,EGUI,GAAGoG,EDLQnF,EFLf,GEKoB,AFLpBhB,GGUiB,CAACoG,KAAK,CAAC,gBHVxB,CACoBtH,QAAQ;AGUhC,IAAM6H,ADLE,AFLwB1G,CEKvB,CAAC,ECKA,CHVsB,EGUnB,IAAAO,eAAM,EAACkG,IAAI,CAAC;AACzB,EDLI,AFN4B,CEM3B,CCKDE,OAAO,GAAG,IAAAC,cAAK,EAACF,IAAI,EAAEtH,QAAQ,CAACyH,cAAc,CAAC,MAAM,CAAC,CAAC;EDVtD,EFDA,KAAA/G,EECAR,EAAA,KFDA,CECAC,AFDAU,CAAA,MAAAD,KAAA,GECA,AFDAF,GECqBf,MAAM,AFD3B,CEC4BS,AFD5BU,CAAA,IAAAC,EECmC,CAACwD,CFDpC,GAA8B,IECc,CAAC,EAAArE,EAAA,GAAAC,eAAA,CAAAf,MAAA,EAAAc,EAAA;ACYjD,IDZiDuE,EFDf,GECe,CFDlCzD,KAAK,GAAAJ,KAAA,CAAAK,KAAA;AGcpB,EDbiD,IFA3ClB,GGaG2H,AHbA,CAACxG,WAAW,CAACC,GGaGuG,CAAA,EAAG,AHbA,CAAC1G,KAAK,CAAC,CAAC;EGclC+F,EHbE,GGaG,EAAE;EACP,ADRE,AFNC,IGcGY,KHdHvG,EGcU,CHdV,EGca0F,UAAU,CAACC,KAAK,CAAC;EACjC,ADTE,EFNCrG,EGeGoE,ADTJJ,KCSS,CDTT,CFNC,CGeW,AHfXrD,CAAA,CAAAD,EGeWiE,CHfX,KEMDX,OCSgB,ADThBnE,CAAA,CCSiB8G,CDRS,GCQL,EAAEM,OAAO,CAAC;EACjCJ,AHhBG,EEQG,IAAI,CCQH,CDRKhH,CAAC,CCQHuE,GDROP,ECQF,CAACgD,KDRS,CAAC,CCQH,CAAC,ADRI;ECS5BF,EHjBG3G,EGiBC,ADRM8D,GCQHmD,IDRU,AFTd,CESe7D,AFTfxC,CAAA,CGiBW,EDRQ,CAAC,UAAAK,KAAK,EAAI;ACSlC,EHlBK,MEUWA,KAAK,CAACgD,eAAe,CAACpE,CAAC,CAAC;A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","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["export default (tagName, { attrs = {}, children = [] } = {}) => {\n  const vElem = Object.create(null);\n\n  Object.assign(vElem, {\n    tagName,\n    attrs,\n    children,\n  });\n\n  return vElem;\n};\n","const renderElem = ({ tagName, attrs, children}) => {\n    // create the element\n    //   e.g. <div></div>\n    const $el = document.createElement(tagName);\n  \n    // add all attributs as specified in vNode.attrs\n    //   e.g. <div id=\"app\"></div>\n    for (const [k, v] of Object.entries(attrs)) {\n      $el.setAttribute(k, v);\n    }\n  \n    // append all children as specified in vNode.children\n    //   e.g. <div id=\"app\"><img></div>\n    for (const child of children) {\n      $el.appendChild(render(child));\n    }\n  \n    return $el;\n  };\n  \n  const render = vNode => {\n    if (typeof vNode === 'string') {\n      return document.createTextNode(vNode);\n    }\n  \n    // we assume everything else to be a virtual element\n    return renderElem(vNode);\n  };\n  \n  export default render;\n  ","export default ($node, $target) => {\n    $target.replaceWith($node);\n    return $node\n}","import render from './render';\n\nconst zip = (xs, ys) => {\n    const zipped = [];\n    for (let i = 0; i < Math.min(xs.length, ys.length); i++) {\n        zipped.push([xs[i], ys[i]]);\n    }\n    return zipped;\n};\n\nconst diffAttrs = (oldAttrs, newAttrs) => {\n    const patches = [];\n\n    // setting newAttrs\n    for (const [k, v] of Object.entries(newAttrs)) {\n        patches.push($node => {\n            $node.setAttribute(k, v);\n            return $node;\n        });\n    }\n\n    // removing attrs\n    for (const k in oldAttrs) {\n        if (!(k in newAttrs)) {\n            patches.push($node => {\n                $node.removeAttribute(k);\n                return $node;\n            });\n        }\n    }\n\n    return $node => {\n        for (const patch of patches) {\n            patch($node);\n        }\n        return $node;\n    };\n};\n\nconst diffChildren = (oldVChildren, newVChildren) => {\n    const childPatches = [];\n    oldVChildren.forEach((oldVChild, i) => {\n        childPatches.push(diff(oldVChild, newVChildren[i]));\n    });\n\n    const additionalPatches = [];\n    for (const additionalVChild of newVChildren.slice(oldVChildren.length)) {\n        additionalPatches.push($node => {\n            $node.appendChild(render(additionalVChild));\n            return $node;\n        });\n    }\n\n    return $parent => {\n        // since childPatches are expecting the $child, not $parent,\n        // we cannot just loop through them and call patch($parent)\n        for (const [patch, $child] of zip(childPatches, $parent.childNodes)) {\n            patch($child);\n        }\n\n        for (const patch of additionalPatches) {\n            patch($parent);\n        }\n        return $parent;\n    };\n};\n\nconst diff = (oldVTree, newVTree) => {\n    // let's assume oldVTree is not undefined!\n    if (newVTree === undefined) {\n        return $node => {\n            $node.remove();\n            // the patch should return the new root node.\n            // since there is none in this case,\n            // we will just return undefined.\n            return undefined;\n        }\n    }\n\n    if (typeof oldVTree === 'string' ||\n        typeof newVTree === 'string') {\n        if (oldVTree !== newVTree) {\n            // could be 2 cases:\n            // 1. both trees are string and they have different values\n            // 2. one of the trees is text node and\n            //    the other one is elem node\n            // Either case, we will just render(newVTree)!\n            return $node => {\n                const $newNode = render(newVTree);\n                $node.replaceWith($newNode);\n                return $newNode;\n            };\n        } else {\n            // this means that both trees are string\n            // and they have the same values\n            return $node => $node;\n        }\n    }\n\n    if (oldVTree.tagName !== newVTree.tagName) {\n        // we assume that they are totally different and \n        // will not attempt to find the differences.\n        // simply render the newVTree and mount it.\n        return $node => {\n            const $newNode = render(newVTree);\n            $node.replaceWith($newNode);\n            return $newNode;\n        };\n    }\n\n    const patchAttrs = diffAttrs(oldVTree.attrs, newVTree.attrs);\n    const patchChildren = diffChildren(oldVTree.children, newVTree.children);\n\n    return $node => {\n        patchAttrs($node);\n        patchChildren($node);\n        return $node;\n    };\n};\n\nexport default diff;","import createElement from './vdom/createElement';\nimport render from './vdom/render';\nimport mount from './vdom/mount';\nimport diff from './vdom/diff';\n\nconst createVApp = count => createElement('div', {\n  attrs: {\n    id: 'root',\n    class: 'todoapp',\n    // dataCount: count, // we use the count here\n  },\n  children: [\n    'The current count is: ',\n    String(count), // and here\n    ...Array.from({ length: count }, () => createElement('img', {\n      attrs: {\n        src: 'https://media.giphy.com/media/cuPm4p4pClZVC/giphy.gif',\n      },\n    })),\n  ],\n});\nlet count = 1\nlet vApp = createVApp(count);\nconst $app = render(vApp);\nlet $rootEl = mount($app, document.getElementById('root'));\n\n// Example of a specific event handler\nfunction handleImageClick() {\n  count++;\n  const vNewApp = createVApp(count);\n  const patch = diff(vApp, vNewApp);\n  $rootEl = patch($rootEl);\n  vApp = vNewApp;\n}\n\n$rootEl.addEventListener('click', handleImageClick);\n// let $rootEl = mount($app, document.getElementById('app'));\n\n// setInterval(() => {\n//   const n = Math.floor(Math.random() * 10);\n//   const vNewApp = createVApp(n);\n//   const patch = diff(vApp, vNewApp);\n\n//   // we might replace the whole $rootEl,\n//   // so we want the patch will return the new $rootEl\n//   $rootEl = patch($rootEl);\n\n//   vApp = vNewApp;\n// }, 1000);\n"]}